<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- Import the application datasource configuration so we can check it -->
	<import resource="classpath:datasource.xml"/>
	
	<!-- Import the volatile configuration -->
	<context:property-placeholder location="classpath:sql/db.properties" />
	
	<!-- Configuration of the dataSource for the test MySQL instance -->
	<beans profile="test">
		<!-- Load Service Beans -->
		<context:component-scan base-package="com.gilpereda.streethistory.service.jpa" />
		
		<bean id="dataSource"
			class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close"
			p:driverClassName="${dataSource.itDriverClassName}"
			p:url="${dataSource.itUrl}/${dataSource.testDB}"
			p:username="${dataSource.itUsername}"
			p:password="${dataSource.itPassword}" />
		<jdbc:initialize-database data-source="dataSource">
			<jdbc:script location="classpath:sql/sh_drop_tables.sql" />
			<jdbc:script location="classpath:sql/sh_create_schema.sql" />
			<jdbc:script location="classpath:sql/sh_load_test_data.sql" />
		</jdbc:initialize-database>
	</beans>
</beans>
